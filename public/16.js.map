{"version":3,"sources":["webpack:///./resources/js/dashboard/views/Gestion/Fournisseurs/BodyForm.js","webpack:///./resources/js/dashboard/views/Gestion/Fournisseurs/DataTable.js","webpack:///./resources/js/dashboard/views/Gestion/Fournisseurs/Fournisseurs.js"],"names":["BodyForm","_this","_classCallCheck","this","_getPrototypeOf","call","handleChange","bind","_assertThisInitialized","sauvegarder","React","Component","e","preventDefault","line","code","props","state","nom","identifiant_fiscale","adresse","ville","ice","global","swal","title","text","type","icon","timer","addFournisseur","setStateNull","setStateChange","target","name","value","fetchFournisseurs","_this2","list_fournisseurs","fournisseurs","map","elem","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","key","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_1__","xs","htmlFor","list","onChange","id","size","color","onClick","className","vider","importerPlanComptable","DataTable","edit","fournisseur","find","getAttribute","fillForm","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","del","indexOf","_this3","hover","bordered","striped","responsive","width","i","data-id","Fournisseurs","length","setState","_defineProperty","splice","setStateFournisseursEmpty","_BodyForm__WEBPACK_IMPORTED_MODULE_2__","addfournisseur","_DataTable__WEBPACK_IMPORTED_MODULE_3__","journal"],"mappings":"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","file":"16.js","sourcesContent":["import React from 'react';\nimport {\n   CardBody,\n   CardFooter,\n   Button,\n   Col,\n   FormGroup,\n   Input,\n   Label,\n   Row,\n} from 'reactstrap';\n\nclass BodyForm extends React.Component {\n   constructor() {\n      super();\n      this.handleChange = this.handleChange.bind(this);\n      this.sauvegarder = this.sauvegarder.bind(this);\n   }\n   sauvegarder(e) {\n      e.preventDefault();\n      const line = {\n         code: this.props.state.code,\n         nom: this.props.state.nom,\n         identifiant_fiscale: this.props.state.identifiant_fiscale,\n         adresse: this.props.state.adresse,\n         ville: this.props.state.ville,\n         ice: this.props.state.ice\n      }\n      if(line.code == '')\n         return global.swal({\n             title: \"Erreur!\",\n             text: \"Veuillez saisie le code\",\n             type: \"error\",\n             icon: \"error\",\n             timer: 2000\n         });\n      this.props.addFournisseur(line);\n      // Reset State\n      this.props.setStateNull();\n   }\n   handleChange(e) {\n      e.preventDefault();\n      this.props.setStateChange(e.target.name,e.target.value)\n   }\n   vider(e) {\n      e.preventDefault();\n      this.props.setStateNull();\n   }\n   importerPlanComptable(e) {\n      e.preventDefault();\n      const plan_comptable = [\n         {\n            code: 3,\n            nom: 'plan comptable 1',\n            identifiant_fiscale: '253',\n            adresse: 'adresse',\n            ville: 'casa',\n            ice: '15'\n         },\n         {\n            code: 4,\n            nom: 'plan comptable 2',\n            identifiant_fiscale: '453',\n            adresse: 'adresse2',\n            ville: 'casa',\n            ice: '44'\n         }\n      ];\n      this.props.fetchFournisseurs(plan_comptable)\n   }\n   render() {\n      const list_fournisseurs = this.props.fournisseurs.map(elem => {\n         return (\n            <option key={elem.code} value={elem.code}>{elem.code} - {elem.nom}</option>\n         )\n      });\n      return (\n         <React.Fragment>\n            <CardBody>\n               <Row>\n                  <Col xs=\"2\">\n                     <FormGroup>\n                        <Label htmlFor=\"ccmonth\">Code Fournisseur</Label>\n                        <Input\n                           type=\"text\"\n                           name=\"code\"\n                           list=\"list_code\"\n                           onChange={(e) => this.handleChange(e)}\n                           value={this.props.state.code}\n                        />\n                        <datalist id=\"list_code\">\n                           { list_fournisseurs }\n                        </datalist>\n                     </FormGroup>\n                  </Col>\n                  <Col xs=\"3\">\n                     <FormGroup>\n                        <Label htmlFor=\"ccyear\">Nom Fournisseur</Label>\n                        <Input\n                           type=\"text\"\n                           name=\"nom\"\n                           onChange={(e) => this.handleChange(e)}\n                           value={this.props.state.nom}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col xs=\"2\">\n                     <FormGroup>\n                        <Label htmlFor=\"ccmonth\">Identifiant Fiscale</Label>\n                        <Input\n                           type=\"text\"\n                           name=\"identifiant_fiscale\"\n                           onChange={(e) => this.handleChange(e)}\n                           value={this.props.state.identifiant_fiscale}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col xs=\"3\">\n                     <FormGroup>\n                        <Label htmlFor=\"ccmonth\">Addresse</Label>\n                        <Input\n                           type=\"textarea\"\n                           name=\"adresse\"\n                           onChange={(e) => this.handleChange(e)}\n                           value={this.props.state.adresse}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col xs=\"3\">\n                     <FormGroup>\n                        <Label htmlFor=\"ccyear\">Ville</Label>\n                        <Input\n                           type=\"text\"\n                           name=\"ville\"\n                           onChange={(e) => this.handleChange(e)}\n                           value={this.props.state.ville}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col xs=\"2\">\n                     <FormGroup>\n                        <Label htmlFor=\"ccmonth\">ICE</Label>\n                        <Input\n                           type=\"text\"\n                           name=\"ice\"\n                           onChange={(e) => this.handleChange(e)}\n                           value={this.props.state.ice}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n            </CardBody>\n            <CardFooter>\n               <Button type=\"submit\" size=\"sm\" color=\"success\" onClick={(e) => this.sauvegarder(e)} ><i className=\"fa fa-dot-circle-o\"></i> Sauvegarder</Button>\n               <Button size=\"sm\" color=\"danger\" onClick={(e) => this.vider(e)} ><i className=\"fa fa-ban\"></i> Vider</Button>\n               <Button size=\"sm\" color=\"primary\" onClick={(e) => this.importerPlanComptable(e)} ><i className=\"fa fa-caret-square-o-up\n\"></i>Importer Plan Comptable</Button>\n            </CardFooter>\n         </React.Fragment>\n      );\n   }\n}\n\nexport default BodyForm;","import React from 'react';\nimport {\n   Table\n} from 'reactstrap';\nclass DataTable extends React.Component {\n   constructor() {\n      super();\n      this.edit = this.edit.bind(this);\n   }\n   edit(e) {\n      e.preventDefault();\n      const fournisseur = this.props.fournisseurs.find(elem => elem.code == e.target.getAttribute('data-id'));\n      this.props.fillForm(fournisseur)\n   }\n   del(e) {\n      e.preventDefault();\n      const fournisseur = this.props.fournisseurs.find(elem => elem.code == e.target.getAttribute('data-id'));\n      if(fournisseur != null)\n      {\n         global.swal({\n            title: 'Are you sure?',\n            text: \"\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'oui, supprimer!'\n          }).then((result) => {\n            if (result.value) {\n               this.props.del(this.props.fournisseurs.indexOf(fournisseur))\n               global.swal(\n                'Deleted!',\n                'Vous avez supprimer!',\n                'success'\n               )\n            }\n          })\n      }\n\n   }\n   render() {\n\n      return (\n         <Table hover bordered striped responsive size=\"sm\">\n            <thead>\n               <tr>\n                  <th width=\"10%\">Code</th>\n                  <th width=\"25%\">Nom</th>\n                  <th width=\"10%\">Ville</th>\n                  <th width=\"25%\">Adresse</th>\n                  <th width=\"10%\">Identifiant Fiscale</th>\n                  <th width=\"10%\">ICE</th>\n                  <th width=\"10%\">Actions</th>\n               </tr>\n            </thead>\n            <tbody>\n            {\n               this.props.fournisseurs.map((elem,i) => {\n                  return (\n                     <tr key={elem.code}>\n                        <td>{elem.code}</td>\n                        <td>{elem.nom}</td>\n                        <td>{elem.ville}</td>\n                        <td>{elem.adresse}</td>\n                        <td>{elem.identifiant_fiscale}</td>\n                        <td>{elem.ice}</td>\n                        <td>\n                           <i\n                              className=\"fa fa-pencil i-edit\" data-id={elem.code}\n                              onClick={(e) => this.edit(e)}\n                           ></i>\n                           <i\n                              className=\"fa fa-trash-o i-trash\" onClick={(e) => this.del(e)}\n                              data-id={elem.code}\n                           >\n                           </i>\n                        </td>\n                     </tr>\n               )\n               })\n            }\n            </tbody>\n         </Table>\n\n      );\n   }\n}\n\nexport default DataTable;","import React, { Component } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardBody\n} from 'reactstrap';\nimport BodyForm from './BodyForm';\nimport DataTable from './DataTable';\n\nclass Fournisseurs extends Component {\n   constructor(props) {\n      super(props);\n      this.setStateChange = this.setStateChange.bind(this);\n      this.setStateNull = this.setStateNull.bind(this);\n      this.fillForm = this.fillForm.bind(this);\n      this.del = this.del.bind(this);\n      this.state = {\n         code: '',\n         nom: '',\n         identifiant_fiscale: '',\n         adresse: '',\n         ville: '',\n         ice: ''\n      };\n   }\n\n   componentDidMount() {\n      // Fetch Fournisseurs\n      const fournisseurs = [\n         {\n            code: 1,\n            nom: 'Fournisseur 1',\n            identifiant_fiscale: '253',\n            adresse: 'adresse',\n            ville: 'casa',\n            ice: '15'\n         },\n         {\n            code: 2,\n            nom: 'Fournisseur 2',\n            identifiant_fiscale: '453',\n            adresse: 'adresse2',\n            ville: 'casa',\n            ice: '44'\n         }\n      ];\n      if(this.props.fournisseurs.length === 0)\n         this.props.fetchFournisseurs(fournisseurs);\n   }\n   setStateChange(name, value) {\n      this.setState({ [name]: value })\n   }\n   setStateNull() {\n      this.setState({\n         code: '',\n         nom: '',\n         identifiant_fiscale: '',\n         adresse: '',\n         ville: '',\n         ice: ''\n      })\n   }\n   fillForm(line) {\n      this.setState({\n         code: line.code,\n         nom: line.nom,\n         identifiant_fiscale: line.identifiant_fiscale,\n         adresse: line.adresse,\n         ville: line.ville,\n         ice: line.ice\n      })\n   }\n   del(id) {\n      const fournisseurs = this.props.fournisseurs;\n      fournisseurs.splice(id, 1);\n      this.props.setStateFournisseursEmpty();\n      this.props.fetchFournisseurs(fournisseurs);\n      this.setStateNull();\n   }\n   render() {\n      return (\n      <div className=\"animated fadeIn\">\n         <Card>\n            <CardHeader>\n               <strong>Gestion</strong> des Fournisseurs\n            </CardHeader>\n            <BodyForm\n               fournisseurs={this.props.fournisseurs}\n               addFournisseur={this.props.addfournisseur}\n               fetchFournisseurs={this.props.fetchFournisseurs}\n               state={this.state}\n               setStateChange={this.setStateChange}\n               setStateNull={this.setStateNull}\n\n            />\n            <CardBody>\n               <DataTable\n                  fournisseurs={this.props.fournisseurs}\n                  journal={this.state}\n                  fillForm={this.fillForm}\n                  del={this.del}\n               />\n            </CardBody>\n         </Card>\n      </div>\n      );\n   }\n}\nexport default Fournisseurs;\n"],"sourceRoot":""}