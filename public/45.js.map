{"version":3,"sources":["webpack:///./resources/js/dashboard/views/Base/Tooltips/Tooltips.js"],"names":["TooltipItem","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","toggle","bind","_assertThisInitialized","state","tooltipOpen","React","Component","setState","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_1__","className","color","id","item","text","placement","isOpen","target","Tooltips","_this2","tooltips","i","newArray","map","element","index","_this3","href","rel","autohide","tooltip","key"],"mappings":"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","file":"45.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Tooltip, UncontrolledTooltip } from 'reactstrap';\n\nclass TooltipItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: false,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen,\n    });\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + this.props.id}>\n          {this.props.item.text}\n        </Button>\n        <Tooltip placement={this.props.item.placement} isOpen={this.state.tooltipOpen} target={'Tooltip-' + this.props.id} toggle={this.toggle}>\n          Tooltip Content!\n        </Tooltip>\n      </span>\n    );\n  }\n}\n\nclass Tooltips extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: [false, false],\n      tooltips: [\n        {\n          placement: 'top',\n          text: 'Top',\n        },\n        {\n          placement: 'bottom',\n          text: 'Bottom',\n        },\n        {\n          placement: 'left',\n          text: 'Left',\n        },\n        {\n          placement: 'right',\n          text: 'Right',\n        },\n      ],\n    };\n  }\n\n  toggle(i) {\n    const newArray = this.state.tooltipOpen.map((element, index) => {\n      return (index === i ? !element : false);\n    });\n    this.setState({\n      tooltipOpen: newArray,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltips</strong>\n            <div className=\"card-header-actions\">\n              <a href=\"https://reactstrap.github.io/components/tooltips/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Somewhere in here is a <a href=\"#\" id=\"TooltipExample\">tooltip</a>.</p>\n            <Tooltip placement=\"right\" isOpen={this.state.tooltipOpen[0]} target=\"TooltipExample\" toggle={() => {this.toggle(0);}}>\n              Hello world!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> disable autohide</small>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Sometimes you need to allow users to select text within a <a href=\"#\" id=\"DisabledAutoHideExample\">tooltip</a>.</p>\n            <Tooltip placement=\"top\" isOpen={this.state.tooltipOpen[1]} autohide={false} target=\"DisabledAutoHideExample\" toggle={() => {this.toggle(1);}}>\n              Try to select this text!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> list</small>\n          </CardHeader>\n          <CardBody>\n            {this.state.tooltips.map((tooltip, i) => {\n              return <TooltipItem key={i} item={tooltip} id={i} />;\n            })}\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> uncontrolled</small>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Somewhere in here is a <a href=\"#\" id=\"UncontrolledTooltipExample\">tooltip</a>.</p>\n            <UncontrolledTooltip placement=\"right\" target=\"UncontrolledTooltipExample\">\n              Hello world!\n            </UncontrolledTooltip>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Tooltips;\n"],"sourceRoot":""}